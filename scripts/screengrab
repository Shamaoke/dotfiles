#!/usr/bin/env zsh

##
# screengrab -- command line utility for grabbing the desktop
#
# Usage: screengrab [timeout] [dimensions]
#
# Examples:
#
# screengrab 5
#
# screengrab 5 800x600
#
# screengrab 5 +10,20
#
# screengrab 5 800x600+10,20
#

timeout=$1
size=${2%+[[:digit:]]*,[[:digit:]]*}
offset=${(M)2%+[[:digit:]]*,[[:digit:]]*}

_regexp='^.*connected ([[:digit:]]+x[[:digit:]]+)(\+[[:digit:]]+)\+([[:digit:]]).*$'

default_size=$(xrandr | sed -r ":a;N;\$!ba;s/$_regexp/\1/")
default_offset=$(xrandr | sed -r ":a;N;\$!ba;s/$_regexp/\2,\3/")

##
# timeout
#
# set a timeout
#
# Start grabbing the screen after a short period of time.
#
# Default: 0
#

##
# size
#
# set the image size
#
# Specify the size of the screen portion. The format is <width>x<height>.
#
# Default: $default_size
#

##
# offset
#
# set an offset
#
# Specify an offset from the top left corner of the screen. The format is +<x>,<y>.
#
# Default: $default_offset
#

function grab {
  ffmpeg -f x11grab \
         -video_size ${size:-$default_size} \
         -i :0.0${offset:-$default_offset} \
         -frames:v 1 \
         -f image2pipe \
         -codec:v png \
         -
  exit $?
}

function copy {
  xclip -in \
        -target image/png \
        -selection clipboard
}

function main TRAPEXIT {
  sleep ${timeout:-0}

  grab | copy

  case $pipestatus[1] {
    (0) notify-send --app-name=screengrab 'Screengrab' 'A desktop screenshot was sent to the clipboard.' ;;
    (*) notify-send --app-name=screenshot 'Screengrab' "An error occurrent when making a desktop screenshot!\nError code: \'${pipestatus[1]}\'." ;;
  }
}

##
# ffmpeg
#
# -f x11grab           -- set the input format (X11 screen capture using XCB); use `ffmpeg -formats` to view all formats
# -video_size 1280x720 -- set the frame size (alias: -s)
# -i :0.0+0,0          -- use the X11 display as an input (format: :<display>.<screen>+<x-offset>,<y-offset>)
# -frames:v 1          -- set the number of video frames to output
# -f image2pipe        -- set the output format (an image sent to the input end of other program through a pipe)
# -codec:v png         -- set the video codec (alias: -vcodec)
# -                    -- output to the standard input
#

##
# xclip
#
# -in                  -- read data into the X selection from the standard input (alias: -i)
# -target image/png    -- specify an input data format (alias: -t)
# -selection clipboard -- specify which X selection to use {primary|secondary|clipboard}
#

# vim: set textwidth=80 colorcolumn=80:
