""
" Customize how folds looks like
" the function is used at `rcs/general`
"
fun CustomizeFoldText()
  return     '├'
         \ . '─'
         \ . '[' . printf('%03d', v:foldend - v:foldstart + 1) . ']'
         \ . substitute(v:folddashes, '-', '─', 'g')
         \ . ' '
         \ . getline(v:foldstart)
endfun

""
" Make and load Vim views
" the functions are used at `rcs/autocommands`
"
" fun MakeView()
"   if expand('<afile>') != '' && expand('<afile>') != '!sh' && filereadable(expand('<afile>')) != 1
"     mkview
"   endif
" endfun
"

fun MakeView()
  if expand('<afile>') != '' && expand('<afile>') != '!sh'
    mkview
  endif
endfun

fun LoadView()
  if expand('<afile>') != '' && expand('<afile>') != '!sh'
    loadview
  endif
endfun
"
" `expand()` is a function, which replaces given wildcards and special keywords
" to their values.

" `filereadable()` is a function, which returns 1 if a file being edited exists
" in the file system and 0 if it doesn't i. e. you start editing a new file by
" the `:new` command.

" `<afile>` is a keyword, which stands for the file name the autocommand was
" executed for, or the file for a read or write.
"
" The `expand('<afile>') != '!sh'` check is needed to prevent making or loading
" views for windows, created by the [fzf][*] plugin.
"
" [*]: https://github.com/junegunn/fzf
"
" References:
"   • Vim User Manual | Make New Commands (usr_40.txt), 40.3. Autocommands, p. 253
"   • Vim Reference Manual | Command Line Mode (cmdline.txt), 6. Ex Special Characters (:help cmdline-special), p. 788
"   • Vim Reference Manual | Expression Evaluation (eval.txt), 4. Builtin Functions (:help expand()), p. 1317
"

" vim: set filetype=vim textwidth=80 colorcolumn=80:
